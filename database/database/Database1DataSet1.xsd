<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet1" targetNamespace="http://tempuri.org/Database1DataSet1.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet1.xsd" xmlns="http://tempuri.org/Database1DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.database.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="registerTableAdapter" GeneratorDataComponentClassName="registerTableAdapter" Name="register" UserDataComponentName="registerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.register" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[register] WHERE (([student id] = @Original_student_id) AND ((@IsNull_name_ = 1 AND [name ] IS NULL) OR ([name ] = @Original_name_)) AND ((@IsNull_sem = 1 AND [sem] IS NULL) OR ([sem] = @Original_sem)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name_" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name " SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name " SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_sem" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sem" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sem" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sem" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[register] ([student id], [name ], [sem]) VALUES (@student_id, @name_, @sem);
SELECT [student id], [name ], sem FROM register WHERE ([student id] = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name " SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sem" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sem" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [student id], [name ], sem FROM dbo.register</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[register] SET [student id] = @student_id, [name ] = @name_, [sem] = @sem WHERE (([student id] = @Original_student_id) AND ((@IsNull_name_ = 1 AND [name ] IS NULL) OR ([name ] = @Original_name_)) AND ((@IsNull_sem = 1 AND [sem] IS NULL) OR ([sem] = @Original_sem)));
SELECT [student id], [name ], sem FROM register WHERE ([student id] = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name " SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sem" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sem" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name_" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name " SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name " SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_sem" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sem" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sem" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sem" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="student id" DataSetColumn="student id" />
              <Mapping SourceColumn="name " DataSetColumn="name " />
              <Mapping SourceColumn="sem" DataSetColumn="sem" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database1DataSet1" msprop:Generator_UserDSName="Database1DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="register" msprop:Generator_TableClassName="registerDataTable" msprop:Generator_TableVarName="tableregister" msprop:Generator_TablePropName="register" msprop:Generator_RowDeletingName="registerRowDeleting" msprop:Generator_RowChangingName="registerRowChanging" msprop:Generator_RowEvHandlerName="registerRowChangeEventHandler" msprop:Generator_RowDeletedName="registerRowDeleted" msprop:Generator_UserTableName="register" msprop:Generator_RowChangedName="registerRowChanged" msprop:Generator_RowEvArgName="registerRowChangeEvent" msprop:Generator_RowClassName="registerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="student_x0020_id" msprop:Generator_ColumnVarNameInTable="columnstudent_id" msprop:Generator_ColumnPropNameInRow="student_id" msprop:Generator_ColumnPropNameInTable="student_idColumn" msprop:Generator_UserColumnName="student id" type="xs:int" />
              <xs:element name="name_x0020_" msprop:Generator_ColumnVarNameInTable="columnname_" msprop:Generator_ColumnPropNameInRow="name_" msprop:Generator_ColumnPropNameInTable="name_Column" msprop:Generator_UserColumnName="name " minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sem" msprop:Generator_ColumnVarNameInTable="columnsem" msprop:Generator_ColumnPropNameInRow="sem" msprop:Generator_ColumnPropNameInTable="semColumn" msprop:Generator_UserColumnName="sem" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:register" />
      <xs:field xpath="mstns:student_x0020_id" />
    </xs:unique>
  </xs:element>
</xs:schema>